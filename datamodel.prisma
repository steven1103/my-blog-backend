type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  avatar : String @default (
    value : "https://momo.nettvnepal.com.np/static/media/default-profile.cd6d11ef.png"
  )
  posts: [Post!]! @relation(name:"PostsOfUser", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Post {
  id: ID! @id
  title:String!
  text: String!
  user: User @relation(name:"PostsOfUser")
  genre: [String] @scalarList(strategy: RELATION)
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  tags: [Tags] @relation(name:"TagsofPost", onDelete:CASCADE)
}
type Tags {
  id : ID! @id
  text : String!
  post: Post @relation(name: "TagsofPost")
  createdAt :DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}